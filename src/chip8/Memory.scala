package chip8
import java.io._
class Memory(romFilename: String) {

  val fontset = Array[Int](0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
						   0x20, 0x60, 0x20, 0x20, 0x70, // 1
						   0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
						   0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
						   0x90, 0x90, 0xF0, 0x10, 0x10, // 4
				 		   0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
				   		   0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
						   0xF0, 0x10, 0x20, 0x40, 0x40, // 7
						   0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
						   0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
						   0xF0, 0x90, 0xF0, 0x90, 0x90, // A
						   0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
						   0xF0, 0x80, 0x80, 0x80, 0xF0, // C
						   0xE0, 0x90, 0x90, 0x90, 0xE0, // D
						   0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
						   0xF0, 0x80, 0xF0, 0x80, 0x80) // F)
  val mem = loadRom(romFilename)

  def loadRom(filename: String): Array[Int] = {
    val is = new FileInputStream(filename)
    val m = Array.concat(Array.fill(0x200)(0), Stream.continually(is.read).takeWhile(-1 !=).toArray).padTo(0xFFF, 0)
    for (i <- 0 until fontset.length) { m(i) = fontset(i) }
    println(m.mkString)
    m
  }

}